https://code.visualstudio.com/ > install
https://nodejs.org/en/ > install
https://git-scm.com/downloads > install
https://github.com/ > sign up
https://github.com/Aakashdeveloper > Follow
https://github.com/developerTech > Follow
https://www.mongodb.com/products/compass > install
https://www.postman.com/downloads/ install

Add to Chrome (https://chrome.google.com/webstore/detail/json-viewer/gbmdgpbipfallnflgajpaliibnhdgobh)

Vs Code extensions
> TabNine
> Eslint
> spell Check
> git history
> git lens
> vscode-icons


NPM
Basic NodeJS(in built)(Os,file,http)
NodeJS(full Stack App) (Node-EJs-Mongo-Express)
Third Party Api (Weather Api)
Redis  > 6379
RedisWithMongo
ImageUpload
Formidable (imgupload)
Node-Es6(.babel)
MongoDb Basic >27017  (local/cloud)
Zomato App backend
Api with NodeJS(Rest)>1
DashBoard(Crud)
Swagger
Testing
TelegramChat
Email With Node(nodemailer)
Github
Login/Logout(JWT)
--Deployment of app---
Heroku
Pm2
Docker
Nginx
Jenkins
Oauth(with github)
Oauth(with google)
Paytm-Payment
NodeJs with postgres
GraphQl API
/////////////////
Chatapp
FIREBASE
--------NOT---------
React/Angular
Html/css/jquery
//////////////////////////
NodeJs
> Single-Thread Async Non-Blocking I/O

Event loop base structure 

Code
\
machine code

V8 engine (processor)

////////////
NPM
>> Node Package Manager

///json
> JavaScript Object Notation
[
    {
        "name":"Amit",
        "city":"Delhi"
    },
    {
        "name":"Nikita",
        "city":"Mumbai",
        "age":10
    }
]

///////Package.json/////////
> Entry Point to the app
> Details of the app (meta data)
> Contains packages we are using
> Contains Script to start,test

/////
Step To generate package.json
///////
**NodeJs must be install in our laptop
> Go Inside the folder using cmd/terminal
> type 'npm init'
> answer all questions


local > used in particular folder
dev > use only for development purpose
global > need before app start
/////
Step To install packages
///////
**NodeJs must be install in our laptop
> Go Inside the folder using cmd/terminal
> npm i packagename

///es5
function add(a,b){
    return a+b
}

add(1,2)
3

//es6
let add = (a,b) => {
    return a+b
}
add(1,2)
3


////// Step to install global package//////
#window
> open the cmd as adminstrator
> npm i -g packagename

#mac/linux
> open terminal
> sudo npm i -g packagename

>>>nodemon
(automatically restart the server whenever detect any changes)

//es5 (ecam script)
var a = 10
var b = "my age is "+a
> "my age is 10"

//es6
var a = 10
var b = `my age is ${a}`
> "my age is 10"

//upgarde npm version

//// npm version patch


Params
> It is compulsory to define
> Use for small values
> pass after (/)

QueryParams
> No Need to define
> use for multiple values
> pass after (?)

download Redis > https://redis.io/download/
> 6379


KEYS *
set key value
set key value ex 10000
get key
del key 
FLUSHALL

https://www.w3schools.com/nodejs/nodejs_uploadfiles.asp


C > Create > insert > POST
R > Read > reading data > GET
U > Update > Put/Patch
D > Delete > Delete


npm i express bcryptjs body-parser cors jsonwebtoken mongoose
/******GetUser*****/
(GET)> http://localhost:5000/api/auth/users

/******Register*****/
(POST)> http://localhost:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role":"admin"}


/******Login*****/
(POST) => http://localhost:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}

/******UserInfo*****/
(GET) => http://localhost:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}

(https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps)

>>>>>><<<<<<<<>>>>>>>>
npm i -g pm2

pm2 start filename
pm2 status
pm2 stop filename


docker build -t imagename
docker run -p 9800:3000 imagename

////dummy api
npx json-server --watch db.json --port 8600